/*
 * This version skips the decisions altogether, "compressing"
 * the path by separating with commas. It assumes that there
 * are no two transitions coming out from an action with the
 * same name.
 */

@initial
operation init() {
  return Action.all;
}

operation Action outgoing() {
  var outEdges : Map;
  self.collectPathsToDecisions(Sequence {}, outEdges);
  return outEdges;
}

operation Action nodeLabel() {
  return self.name;
}

operation Node collectPathsToDecisions(currentPath: Sequence, paths: Map) {
  for (t in self.outgoing) {
    t.collectPathsToDecisions(currentPath, paths);
  }
}

operation Transition collectPathsToDecisions(currentPath: Sequence, paths: Map) {
  currentPath.add(self.name);
  if (self.target.isKindOf(Action)) {
    paths.put(currentPath.concat(', '), self.target);
  } else {
    self.target.collectPathsToDecisions(currentPath, paths);
  }
  currentPath.removeAt(currentPath.size - 1);
}
